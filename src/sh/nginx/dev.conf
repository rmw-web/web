server {
listen 443 ssl http2;
expires -1;
server_name ~^api-(?<devport>\d+)\.${HOST.replace(/\./g,'\\.')};
ssl_certificate  /root/.acme.sh/${HOST}/fullchain.cer;
ssl_certificate_key  /root/.acme.sh/${HOST}/${HOST}.key;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
error_log   /var/log/nginx/api.${HOST}.error.log;
access_log   /var/log/nginx/api.${HOST}.access.log host;
location / {
proxy_pass http://127.0.0.1:$devport;
}
}

server {
listen 443 ssl http2;
server_name ~^v(?<devport>\d+)\.${HOST.replace(/\./g,'\\.')};
ssl_certificate  /root/.acme.sh/${HOST}/fullchain.cer;
ssl_certificate_key  /root/.acme.sh/${HOST}/${HOST}.key;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
error_log   /var/log/nginx/v.${HOST}.error.log;
access_log   /var/log/nginx/v.${HOST}.access.log host;
location ~ ^/(?!(.+\.)) {
rewrite ^/(.*) /index.html last;
}
location /auth/ {
rewrite ^/(.*) /index.html last;
}
location = /index.html {
expires 60s;
}
expires 9999999s;
index index.html;
root /var/www/${HOST}/$devport;
}

server {
listen 443 ssl http2;
server_name ~^cdn-(?<devport>\d+)\.${HOST.replace(/\./g,'\\.')};
expires 9999999s;
ssl_certificate  /root/.acme.sh/${HOST}/fullchain.cer;
ssl_certificate_key  /root/.acme.sh/${HOST}/${HOST}.key;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
error_log   /var/log/nginx/cdn.${HOST}.error.log;
access_log   /var/log/nginx/cdn.${HOST}.access.log host;
location / {
if ($request_method = 'OPTIONS') {
  add_header 'Access-Control-Allow-Origin' '*';
  add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
  add_header 'Access-Control-Max-Age' 86400;
  add_header 'Content-Type' 'text/plain; charset=utf-8';
  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
  add_header 'Content-Length' 0;
  return 204;
}
add_header 'Access-Control-Allow-Origin' '*';
add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
root /var/www/${HOST}/$devport;
}
}

server {
listen 443 ssl http2;
server_name ~^ws-(?<devport>\d+)\.${HOST.replace(/\./g,'\\.')};
expires -1;
ssl_certificate  /root/.acme.sh/${HOST}/fullchain.cer;
ssl_certificate_key  /root/.acme.sh/${HOST}/${HOST}.key;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
error_log   /var/log/nginx/ws.${HOST}.error.log;
access_log   /var/log/nginx/ws.${HOST}.access.log host;
location / {
proxy_set_header X-Real-IP  $remote_addr;
proxy_set_header X-Forwarded-For $remote_addr;
proxy_set_header Host $host;
proxy_pass http://127.0.0.1:$devport;
proxy_redirect off;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
}

}

server {
listen 443 ssl http2;
server_name ~^(?<devport>\d+)\.${HOST.replace(/\./g,'\\.')};
expires -1;
ssl_certificate  /root/.acme.sh/${HOST}/fullchain.cer;
ssl_certificate_key  /root/.acme.sh/${HOST}/${HOST}.key;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
error_log   /var/log/nginx/${HOST}.error.log;
access_log   /var/log/nginx/${HOST}.access.log host;
location / {
if ($request_method = 'OPTIONS') {
  add_header 'Access-Control-Allow-Origin' '*';
  add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
  add_header 'Access-Control-Max-Age' 86400;
  add_header 'Content-Type' 'text/plain; charset=utf-8';
  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
  add_header 'Content-Length' 0;
  return 204;
}
add_header 'Access-Control-Allow-Origin' '*';
add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
proxy_pass http://127.0.0.1:$devport;
}

location /sockjs-node {
proxy_set_header X-Real-IP  $remote_addr;
proxy_set_header X-Forwarded-For $remote_addr;
proxy_set_header Host $host;
proxy_pass http://127.0.0.1:$devport;
proxy_redirect off;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
}

}

server {
listen       80;
server_name ~^(\d+)\.${HOST.replace('.','\\.')};
return 301 https://$host$request_uri;
}
